package ${targetPackage};

import javax.inject.Inject;
<#if (withPOST || withPUT) && hasIdProperty>import javax.ws.rs.Consumes;
</#if><#if withDELETE && hasIdProperty>import javax.ws.rs.DELETE;
</#if><#if withGET>import javax.ws.rs.GET;
</#if><#if withPOST && hasIdProperty>import javax.ws.rs.POST;
</#if><#if withPUT && hasIdProperty>import javax.ws.rs.PUT;
</#if>import javax.ws.rs.Path;
<#if hasIdProperty && (withGET || withPUT || withDELETE)>import javax.ws.rs.PathParam;
</#if><#if withGET>import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
</#if>import javax.ws.rs.core.Response;

<#if (withPOST || withPUT) && hasIdProperty>import ${resourceRepresentation.qualifiedName};
</#if>
@Path("${resourcePath}")
public class ${resourceName}ResourceClass implements I${resourceName}ResourceClass, I${resourceName}ResourcesClass {

	@Inject
	private I${resourceName}ResourceController resourceController;

<#if withGET && hasIdProperty>	@GET
	@Path("{${keyName}}")
 	@Produces({${contentTypes?join(", ")}})
 	@Override
	public Response getBy${keyPropertyName}(@PathParam("${keyName}") ${keyPropertyType} ${keyName}) {
		return resourceController.getBy${keyPropertyName}(${keyName});
	}

</#if><#if withGET>	@GET
	@Override
	@Produces({${contentTypes?join(", ")}})
	public Response getAll(@QueryParam("start") Integer startPosition, @QueryParam("max") Integer maxResult) {
		return resourceController.getAll(startPosition, maxResult);
	}
	
	// add get methods returning lists to I${resourceName}ResourcesClass
</#if>

<#if withPOST && hasIdProperty>	@POST
 	@Override
	@Consumes({${contentTypes?join(", ")}})
	public Response create(${resourceRepresentation.name} rro) {
		return resourceController.create(rro);
	}
</#if>

<#if withDELETE && hasIdProperty>	@DELETE
	@Path("{${keyName}}")
 	@Override
	public Response removeBy${keyPropertyName}(@PathParam("${keyName}") ${keyPropertyType} ${keyName}) {
		return resourceController.removeBy${keyPropertyName}(${keyName});
	}
</#if>

<#if withPUT && hasIdProperty>	@PUT
	@Path("{${keyName}}")
	@Consumes({${contentTypes?join(", ")}})
 	@Override
	public Response update(@PathParam("${keyName}") ${keyPropertyType} ${keyName}, ${resourceRepresentation.name} rro) {
		return resourceController.update(${keyName}, rro);
	}
</#if>}

